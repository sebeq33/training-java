package persistence;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import mapper.ResultMapper;
import persistence.exceptions.DaoException;
import persistence.querycommands.QueryCommand;

public class DaoConnection {
    private static final String JDBC_URL_CONNECTION_FORMAT = "jdbc:mysql://%s:%s/%s?autoReconnect=true&useSSL=false";
    private static String       url                        = null;
    private static String       password                   = null;
    private static String       user                       = null;

    private static final Logger LOGGER = LoggerFactory.getLogger(DaoConnection.class);

    /**
     * @param query the query to execute
     * @return the exact result of the query of type T
     * @param <T> the type of the model to @return
     * @throws DaoException content couldn't be loaded
     */
    public static <T> T executeQuery(QueryCommand<T> query) throws DaoException {
        Connection conn = null;

        if (url == null) {
            loadConnectionString();
        }
        try {
            conn = DriverManager.getConnection(url, user, password);
            return query.execute(conn);
        } catch (SQLException e) {
            throw new DaoException(e);

        } finally {

            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException e) {
                    LOGGER.warn("Connection failed to close");
                }
            }

        }
    }

    /**
     * @param sql simple select query
     * @param mapper the mapper translating ResultSet to the corresponding Model
     * @param <T> the type of the model to @return
     * @return the model generated by the @mapper from the data return by @sql
     * @throws DaoException content couldn't be loaded
     */
    public static <T> T executeSelectQuery(String sql, ResultMapper<T> mapper) throws DaoException {
        QueryCommand<T> query = (Connection c) -> {
            try (Statement s = c.createStatement();) {
                try (ResultSet r = s.executeQuery(sql)) {
                    return mapper.process(r);
                }
            }
        };
        return executeQuery(query);
    }

    /**
     * load DbConfig and read it to build jdbc connection string url.
     * @throws DaoException db properties failed to load config file
     */
    private static void loadConnectionString() throws DaoException {

        try {
            DbProperties.load();
        } catch (IOException e) {
            throw new DaoException(e);
        }

        String database = DbProperties.getConfig("database");
        String port = DbProperties.getConfig("port");
        String hostAddress = DbProperties.getConfig("hostAddress");

        password = DbProperties.getConfig("dbpassword");
        user = DbProperties.getConfig("dbuser");
        url = String.format(JDBC_URL_CONNECTION_FORMAT, hostAddress, port, database);
    }
}
